@model ims.Models.PurchaseOrder

@{
    ViewData["Title"] = "Purchase Order Detail";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">

    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="content-container-fluid">
                    <div class="row">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.PurchaseOrderId)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.PurchaseOrderId)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.PurchaseOrderName)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.PurchaseOrderName)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.BranchId)
                            </dt>
                            <dd>
                                <input type="text" id="BranchId" />
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.VendorId)
                            </dt>
                            <dd>
                                <input type="text" id="VendorId" />
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.OrderDate)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.OrderDate)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.DeliveryDate)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.DeliveryDate)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.CurrencyId)
                            </dt>
                            <dd>
                                <input type="text" id="CurrencyId" />
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.PurchaseTypeId)
                            </dt>
                            <dd>
                                <input type="text" id="PurchaseTypeId" />
                            </dd>


                        </dl>
                    </div>
                    

                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
        <div class="box">
            <div class="box-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div id="Grid"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-8">

                    </div>
                    <div class="col-lg-4">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.Remarks)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Remarks)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Amount)
                            </dt>
                            <dd>
                                <label id="Amount" name="Amount">@Model.Amount</label>
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Discount)
                            </dt>
                            <dd>
                                <label id="Discount" name="Discount">@Model.Discount</label>
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.SubTotal)
                            </dt>
                            <dd>
                                <label id="SubTotal" name="SubTotal">@Model.SubTotal</label>
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Tax)
                            </dt>
                            <dd>
                                <label id="Tax" name="Tax">@Model.Tax</label>
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Freight)
                            </dt>
                            <dd>
                                <label id="Freight" name="Freight">@Model.Freight</label>
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Total)
                            </dt>
                            <dd>
                                <label id="Total" name="Total">@Model.Total</label>
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->




@section Styles{

}

@section Scripts{

    <script type="text/javascript">
        $(function () {

            var dataManager = ej.DataManager({
                url: "/api/PurchaseOrderLine",
                adaptor: new ej.WebApiAdaptor(),
                headers: [{ "PurchaseOrderId": @Model.PurchaseOrderId}],
                offline: true,
            });

            var dataManagerProduct = ej.DataManager({
                url: "/api/Product",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerPurchaseOrder = ej.DataManager({
                url: "/api/PurchaseOrder",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerBranch = ej.DataManager({
                url: "/api/Branch",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerVendor = ej.DataManager({
                url: "/api/Vendor",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerCurrency = ej.DataManager({
                url: "/api/Currency",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerPurchaseType = ej.DataManager({
                url: "/api/PurchaseType",
                adaptor: new ej.WebApiAdaptor()
            });

            $('#BranchId').ejDropDownList({
                dataSource: dataManagerBranch,
                fields: { id: 'BranchId', text: 'BranchName', value: 'BranchId' },
                value: @Model.BranchId,
                enabled: false,
            });

            $('#VendorId').ejDropDownList({
                dataSource: dataManagerVendor,
                fields: { id: 'VendorId', text: 'VendorName', value: 'VendorId' },
                value: @Model.VendorId,
                enabled: false,
            });

            $('#CurrencyId').ejDropDownList({
                dataSource: dataManagerCurrency,
                 fields: { id: 'CurrencyId', text: 'CurrencyName', value: 'CurrencyId' },
                value: @Model.CurrencyId,
                enabled: false,
            });

            $('#PurchaseTypeId').ejDropDownList({
                dataSource: dataManagerPurchaseType,
                fields: { id: 'PurchaseTypeId', text: 'PurchaseTypeName', value: 'PurchaseTypeId' },
                value: @Model.PurchaseTypeId,
                enabled: false,
            });

            dataManager.ready.done(function (e) { 
            $("#Grid").ejGrid({
                dataSource: ej.DataManager({
                    json: e.result,
                    adaptor: new ej.remoteSaveAdaptor(),
                    insertUrl: "/api/PurchaseOrderLine/Insert",
                    updateUrl: "/api/PurchaseOrderLine/Update",
                    removeUrl: "/api/PurchaseOrderLine/Remove",
                }),
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["add", "edit", "delete", "update", "cancel"]
                },
                editSettings: {
                    allowEditing: true,
                    allowAdding: true,
                    allowDeleting: true,
                    showDeleteConfirmDialog: true,

                },
                allowPaging: true,
                columns: [
                    { field: "PurchaseOrderLineId", headerText: 'Line Id', isPrimaryKey: true, isIdentity: true, visible: false },
                    { field: "PurchaseOrderId", headerText: 'PO#', defaultValue: @Model.PurchaseOrderId, foreignKeyField: "PurchaseOrderId", foreignKeyValue: "PurchaseOrderName", dataSource: dataManagerPurchaseOrder, visible: false },
                    { field: "ProductId", headerText: 'Product', foreignKeyField: "ProductId", foreignKeyValue: "ProductName", dataSource: dataManagerProduct },
                    { field: "Description", headerText: 'Description' },
                    { field: "Quantity", headerText: 'Qty', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                    { field: "Price", headerText: 'Price', defaultValue: 0, editType: "numericedit", format: "{0:n2}" },
                    { field: "Amount", headerText: 'Amount', defaultValue: 0, allowEditing: false, editType: "numericedit", format: "{0:n2}" },
                    { field: "DiscountPercentage", headerText: 'Disc %', defaultValue: 0, editType: "numericedit", format: "{0:n2}" },
                    { field: "DiscountAmount", headerText: 'Disc Amt', defaultValue: 0, visible: false, editType: "numericedit", format: "{0:n2}" },
                    { field: "SubTotal", headerText: 'SubTotal', defaultValue: 0, allowEditing: false, editType: "numericedit", format: "{0:n2}" },
                    { field: "TaxPercentage", headerText: 'Tax %', defaultValue: 0, editType: "numericedit", format: "{0:n2}" },
                    { field: "TaxAmount", headerText: 'Tax Amt', defaultValue: 0, visible: false, editType: "numericedit", format: "{0:n2}" },
                    { field: "Total", headerText: 'Total', defaultValue: 0, allowEditing: false, editType: "numericedit", format: "{0:n2}" },
                ],
                actionComplete: "complete",
            });
            });


        });

        function complete(args) {

            if (args.requestType == 'beginedit') {
                $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Record" });
            }
            if (args.requestType == 'save' || args.requestType == 'delete') {
                RewriteTotal(args.data.PurchaseOrderId);
            }
        }

        function RewriteTotal(purchaseOrderId) {
            $.ajax({
                type: 'GET',
                url: '/api/PurchaseOrder/GetById/' + purchaseOrderId,
                success: function (data) {
                    $('#Amount').text(data.Amount);
                    $('#SubTotal').text(data.SubTotal);
                    $('#Discount').text(data.Discount);
                    $('#Tax').text(data.Tax);
                    $('#Freight').text(data.Freight);
                    $('#Total').text(data.Total);
                }
            });
        }



    </script>
}

